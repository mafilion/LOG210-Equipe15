@model LibraryManagement.Models.DeliveriesViewModel
@using LibraryManagement.Utils;
<script src="@Url.Content("~/Scripts/Deliveries.js")" type="text/javascript"></script>

<h2>@UtilResources.GetLabel("Détails Livraison")</h2>

@using (Html.BeginForm("Edit", "Deliveries", FormMethod.Post, new { onsubmit = "return isValidForm();" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.booking.IDBooking)
        @Html.HiddenFor(model => model.booking.IDStudent)

        <h3>@UtilResources.GetLabel("Etudiant")</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.student.FirstName, @UtilResources.GetLabel("Prenom") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.student.FirstName, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.student.LastName, @UtilResources.GetLabel("Nom") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.student.LastName, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.booking.BookingDate, @UtilResources.GetLabel("Date réservation") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.booking.BookingDate, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
            </div>
        </div>

        <h3>@UtilResources.GetLabel("Livres réservés")</h3>
        <hr />
        @for (int i = 0; i < Model.bookingLineList.Count(); i++)
        {
            @Html.HiddenFor(model => model.bookingLineList[i].IDBookingLine)
            @Html.HiddenFor(model => model.bookingLineList[i].IDBooksCopy)
            @Html.HiddenFor(model => model.bookingLineList[i].BookingState)
            @Html.HiddenFor(model => model.bookList[i].IDBook)
            @Html.HiddenFor(model => model.booksStateList[i].PricePercentage)

            <h3>@UtilResources.GetLabel("Livre") @(i+1)</h3>
            //Info Livre
            <div class="form-group">
                @Html.LabelFor(model => model.bookList[i].noISBN, @UtilResources.GetLabel("Numero ISBN/EAN/UPC") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.bookList[i].noISBN, new { htmlAttributes = new { @class = "form-control" } ,@readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bookList[i].Title, @UtilResources.GetLabel("Titre") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.bookList[i].Title, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bookList[i].nbPages, @UtilResources.GetLabel("Nombre de pages") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.bookList[i].nbPages, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                </div>
            </div>

            //À Changé pour le prix du livre
            <div class="form-group">
                @Html.LabelFor(model => model.bookList[i].price, @UtilResources.GetLabel("Prix") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.bookList[i].price, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                </div>
            </div>

            //Auteur Principal (i guess)
            <div class="form-group">
                @Html.LabelFor(model => model.authorList[i].Name, @UtilResources.GetLabel("Auteur") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.authorList[i].Name, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                </div>
            </div>

            //Etat
            <div class="form-group">
                @Html.LabelFor(model => model.booksStateList[i].Description, @UtilResources.GetLabel("État du livre") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.booksStateList[i].Description, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(boo => Model.booksStateList, @UtilResources.GetLabel("Confirmation Transaction")+" :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.DropDownList("StateBookingLine"+Model.bookingLineList[i].IDBookingLine, null , htmlAttributes: new { @class = "form-control" , @id="Book#"+Model.bookingLineList[i].IDBookingLine })
                </div>
            </div>
            <hr />
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="ConfirmLivraison" value="@UtilResources.GetLabel("Sauvegarder")" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink(@UtilResources.GetLabel("Retour"), "Index")
</div>
