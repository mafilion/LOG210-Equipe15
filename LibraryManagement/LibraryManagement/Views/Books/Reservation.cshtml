@model LibraryManagement.Models.BooksAuthorsViewModel
@using LibraryManagement.Utils;

<script src="@Url.Content("~/Scripts/livre.js")" type="text/javascript"></script>
<h2>@UtilResources.GetLabel("Réservation")</h2>

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-8">
        <section id="loginFormManager">
            @using (Html.BeginForm("Reservation", "Books", FormMethod.Post, new { onsubmit = "return isValid();" }))
            {
                @Html.AntiForgeryToken()
                <h4>@UtilResources.GetLabel("Effectuer une recherche avec: ISBN, UPC, le nom de l’auteur ou une partie du titre")</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.book.noISBN, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.book.noISBN, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.book.noISBN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.book.BooksAuthors, @UtilResources.GetLabel("Auteur"), new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.book.BooksAuthors, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.book.BooksAuthors, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.book.noUPC, @UtilResources.GetLabel("NoUPC"), new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.book.noUPC, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.book.noUPC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.book.Title, @UtilResources.GetLabel("Titre"), new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.book.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.book.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@UtilResources.GetLabel("Recherche")" class="btn btn-default" />
                    </div>
                </div>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
</div>

<div class="form-horizontal">
    <hr />
    <h3>@UtilResources.GetLabel("Rechercher livre")</h3>
    <div class="form-group">
        @Html.Label(@UtilResources.GetLabel("Numero ISBN/EAN/UPC") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="BookNumber" name="BookNumber" class="form-control">
            <br />
            <button type="button" id="SearchBooks" name="SearchBooks" class="btn btn-default" onclick="findLivre()">@UtilResources.GetLabel("Rechercher")</button>
            <!-- Si il y a des values dans l'un des champs, popup confirmation qu'il souhaite réinitialiser les informations du livre (si il n'a pas cliqué sur ajouter le livre ne sera pas ajouté)-->
        </div>
    </div>
    <hr />
    <h3>@UtilResources.GetLabel("Information du livre")</h3>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.book.noISBN, @UtilResources.GetLabel("Numero ISBN/EAN/UPC") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.book.noISBN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.book.noISBN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.book.Title, @UtilResources.GetLabel("Titre") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.book.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.book.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.book.nbPages, @UtilResources.GetLabel("Nombre de pages") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.book.nbPages, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.book.nbPages, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.book.price, @UtilResources.GetLabel("Prix neuf") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.book.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.book.price, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- Section Auteur (À Revoir pour rendre dynamique)-->
    <hr />
    <h3>@UtilResources.GetLabel("Auteurs")</h3>

    <div class="form-group">
        @Html.Label(@UtilResources.GetLabel("Principal") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="AuthorName1" name="AuthorName1" class="form-control">
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.Label(@UtilResources.GetLabel("Secondaire") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="AuthorName2" name="AuthorName2" class="form-control">
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.Label(@UtilResources.GetLabel("Secondaire") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="AuthorName3" name="AuthorName3" class="form-control">
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.Label(@UtilResources.GetLabel("Secondaire") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="AuthorName4" name="AuthorName4" class="form-control">
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.Label(@UtilResources.GetLabel("Secondaire") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="AuthorName5" name="AuthorName5" class="form-control">
            <br />
        </div>
    </div>

    <!--Faire un event javascript/jquery qui va ajouter des champs Prénom/Nom lorsque l'on clique sur le + -->
    <hr />
    <!--Fin Section Auteur (À Revoir pour rendre dynamique)-->

    <div class="form-group">
        @Html.LabelFor(model => model.bookState.IDBookState, @UtilResources.GetLabel("État du livre") + " :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IDBookState", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.bookState.IDBookState, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Suppression du Form Necessaire, il va falloir faire un event javascript qui va caller la méthode de create dans le controlleur en AJAX-->
    <!-- Après l'ajout, popup de confirmation de l'ajout puisque la fenêtre ne sera pas redirigez automatiquement(ou faire un popup qui demande si il veut ajouter un autre livre)-->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" id="AddBook" name="AddBook" onclick="sendLivre()" class="btn btn-default">@UtilResources.GetLabel("Creer")</button>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink(@UtilResources.GetLabel("Retour"), "Index", "Home")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
