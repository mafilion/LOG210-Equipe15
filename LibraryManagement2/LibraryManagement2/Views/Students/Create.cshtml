@model LibraryManagement2.Models.Student
@using LibraryManagement2.Utils;
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">
    /* TO DO:
        DONE - Le ViewModel n'est pas nécéssaire gab en avait besoin vu qu'il avait besoin d'accéder à la table Gestionnaire et Coopérative ce qui n'est pas ton cas.
        DONE Validation De password (que ta commencé)
        DONE Validation De téléphone
        TODO Validation de courriel
        La validation devrait être fait dans le contrôleur regarde du côté de gab il la fait
        Pour ce qui est de comment afficher les validations voici un lien pour t'aider
        http://stackoverflow.com/questions/20141102/mvc-4-return-error-message-from-controller-show-in-view
        Petit conseil fait un input qui va être afficher seulement si il y a une erreur dans acomercialHtml.ValidationMessage("Error")
        et met lerreur dans sa value et met un css avec texte rouge pour afficher l'erreur.

        Autres
        Je t'ai ajouté l'encryptage dans ton create il manque juste à lié le bon champ dedans.
    */

</script>

<h2>@UtilResources.GetLabel("Nouveau Compte") @UtilResources.GetLabel("Etudiant")</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@UtilResources.GetLabel("Etudiant")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, @UtilResources.GetLabel("Prenom")+" :", htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, @UtilResources.GetLabel("Nom")+ " :", htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, @UtilResources.GetLabel("Courriel")+ " :", htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, @UtilResources.GetLabel("Telephone")+ " :", htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentPassword, @UtilResources.GetLabel("MotDePasse")+ " :", htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
            <div class="col-md-10">
                <input type="password" id="password1" name="password1" class="form-control"> 
            </div>
        </div>

        <div class="form-group">
            @Html.Label(@UtilResources.GetLabel("ConfirmMotDePasse")+ " :", htmlAttributes: new { @class = "control-label col-md-2", required="required" })
            <div class="col-md-10">
                <input type="password" id="password2" name="password2" class="form-control">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@UtilResources.GetLabel("Creer")" class="btn btn-default" onclick="passwordMatch()"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@UtilResources.GetLabel("Retour"), "Index","Home")
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
